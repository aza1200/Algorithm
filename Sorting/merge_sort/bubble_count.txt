#include <iostream>
#include <vector>

using namespace std;

int sorted[500005];
int a[500005];
long long answer = 0;
vector<int> vec;

void merge(int start, int mid, int end) {
	int i = start;
	int j = mid + 1;
	int k = start;

	while (i <= mid && j <= end) {
		if (vec[i] > vec[j]) {
			sorted[k++] = vec[j++];
			answer += (long long)(j - k);
		}
		else {
			sorted[k++] = vec[i++];
		}
	}

	if (i>mid) {
		for (int l = j; l <= end; l++) {
			sorted[k++] = vec[l];
		}
	}
	else {
		for (int l = i; l <= mid; l++) {
			sorted[k++] = vec[l];
		}
	}

	for (int l = start; l <= end; l++) {
		vec[l] = sorted[l];
	}
}

void merge_sort(int start, int end) {
	int mid = (start + end) / 2;
	if (start<end) {
		merge_sort(start, mid);
		merge_sort(mid + 1, end);
		merge(start, mid, end);
	}

}

int main() {
	int N; cin >> N;



	for (int i = 0; i < N; i++) {
		cin >> a[i]; vec.push_back(a[i]);
	}
	merge_sort(0, N - 1);

	cout << answer << "\n";

}